
Exercise 00: Easy find
概要
まず、簡単な課題からスタートします。関数テンプレートeasyfindを作成し、型Tを受け取ります。

この関数は、整数のコンテナとしてT型の変数と、整数の2つのパラメータを取ります。
Tに含まれる整数の中で、2番目の引数に該当する最初の値を検索します。
見つからない場合は例外をスローするか、エラー値を返します。標準コンテナの動作を参考にしてください。なお、関連コンテナを扱う必要はありません。
使用技術：STLコンテナ（整数のみ）、検索ロジックの実装。

Exercise 01: Span
概要
最大N個の整数を格納できるSpanクラスを開発します。Nはunsigned int型で、コンストラクタでのみ指定します。

仕様

メンバ関数addNumber()でSpanに整数を1つ追加できます。既にN個の要素がある場合、新しい要素の追加は例外をスローします。
メンバ関数shortestSpan()とlongestSpan()を実装します。格納されたすべての数の中から最小間隔と最大間隔を計算して返します。要素が1つ以下の場合、間隔は存在しないため、例外をスローします。
このクラスは、最低でも1万個以上の数でテストを行う必要があります。また、複数の数を一度に追加できるメンバ関数を実装し、イテレータの範囲でSpanを埋められるようにします。
使用技術：STLコンテナ、イテレータ、範囲操作の実装。